- name: "Declare empty guest config for {{vagrant_guest_name}}" 
  set_fact:
    vagrant_guest_config: {}

- name: "Copy vagrant guest configs from host variables for {{vagrant_guest_name}}"
  set_fact:
    vagrant_guest_config: "{{ vagrant_guest_config | combine( [item | combine({'key':item.key[8:]})] | items2dict ) }}"
  with_items: "{{ dict(hostvars[vagrant_guest_name]) | dict2items | selectattr('key','match','^vagrant_.*$')}}"
  loop_control:
    label: "{{item.key}}"

- name: list vagrant boxes to see if already added
  command:
    argv:
      - "{{ vagrant_binary_path }}"
      - box
      - list
      - --machine-readable
  register: 
    vagrant_box_list

- name: start with empty vagrant box add command
  tags:
    - vagrant_box_add
  set_fact:
    vagrant_box_add_command_args: []
- name: build vagrant box add command
  tags:
    - vagrant_box_add
  set_fact:
    vagrant_box_add_command_args: "{{ (vagrant_box_add_command_args | default([])) + [item] }}"
  when: item != omit
  loop:
    - "{{ vagrant_binary_path }}"
    - box
    - add
    - "{{ hostvars[vagrant_guest_name].vagrant_box_url }}"
    - "{{ (force_imports | default(False)) | ternary('--force', omit) }}"
    - --name
    - "{{ hostvars[vagrant_guest_name].vagrant_box_name }}"

- name: "Import {{ hostvars[vagrant_guest_name].vagrant_box }} Box path for {{ vagrant_guest_name }}"
  tags:
    - vagrant_box_add
  command:  
    argv: "{{vagrant_box_add_command_args}}"
  ignore_errors: true
  when: vagrant_box_list.stdout | community.general.from_csv(fieldnames=['id','blank','name','value','extra']) | selectattr('name','==','box-name') | selectattr('value','==',hostvars[vagrant_guest_name].vagrant_box_name) | length == 0
- name: "Add guest name=\"{{ vagrant_guest_name }}\""
  set_fact:
    vagrant_guest_config: "{{ vagrant_guest_config | combine( {'name': vagrant_guest_name} ) }}"
- name: "Create workspace path for {{vagrant_guest_name}} at {{vagrant_guest_config['workspace_path']}}"
  file:
    path: "{{vagrant_guest_config['workspace_path']}}"
    state: directory
- name: "Get stats of a background picture for {{vagrant_guest_name}}"
  ansible.builtin.stat:
    path: "{{vagrant_guest_config['workspace_path']}}/background.png"
  register: vagrant_guest_background_stat
- name: "Download random background for {{vagrant_guest_name}}"
  get_url:
    url: https://picsum.photos/1920/1200
    dest: "{{vagrant_guest_config['workspace_path']}}/background.png"
  when: "not vagrant_guest_background_stat.stat.exists"

- name: "Show vagrant guest config for {{vagrant_guest_name}}"
  debug:
    var: vagrant_guest_config
    verbosity: 2


- name: "Add guest {{vagrant_guest_name}} to list"
  set_fact:
    vagrant_guest_configs: "{{ vagrant_guest_configs + [vagrant_guest_config] }}"
